// This file is auto-generated by @hey-api/openapi-ts

import type {
  Options as ClientOptions,
  TDataShape,
  Client,
} from './client/index.js';
import type {
  GetMetricsData,
  GetMetricsResponses,
  CheckData,
  CheckResponses,
} from './types.gen.js';
import { client as _heyApiClient } from './client.gen.js';

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * Get prom metric
 */
export const getMetrics = <ThrowOnError extends boolean = false>(
  options?: Options<GetMetricsData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetMetricsResponses,
    unknown,
    ThrowOnError
  >({
    url: '/metrics',
    ...options,
  });
};

export const check = <ThrowOnError extends boolean = false>(
  options?: Options<CheckData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    CheckResponses,
    unknown,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/health/check',
    ...options,
  });
};
